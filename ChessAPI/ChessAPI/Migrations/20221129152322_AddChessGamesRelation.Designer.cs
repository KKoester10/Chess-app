// <auto-generated />
using System;
using ChessAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChessAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221129152322_AddChessGamesRelation")]
    partial class AddChessGamesRelation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ChessAPI.Models.ChessGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BlackId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WhiteId")
                        .HasColumnType("int");

                    b.Property<bool>("Win")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BlackId");

                    b.HasIndex("WhiteId");

                    b.ToTable("ChessGames");
                });

            modelBuilder.Entity("ChessAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 11, 29, 8, 23, 22, 114, DateTimeKind.Local).AddTicks(4245),
                            Email = "test1@test.com",
                            FirstName = "TestFirst1",
                            LastName = "TestFirst1",
                            Password = "Password1",
                            ProfilePic = "../../chessboard-app/src/components/images/Profile_Pics/godmode.jpg",
                            UserName = "TestUserName1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 11, 29, 8, 23, 22, 114, DateTimeKind.Local).AddTicks(4278),
                            Email = "test2@test.com",
                            FirstName = "TestFirst2",
                            LastName = "TestFirst2",
                            Password = "Password2",
                            ProfilePic = "../../chessboard-app/src/components/images/Profile_Pics/JacobKresak.jpg",
                            UserName = "TestUserName2"
                        });
                });

            modelBuilder.Entity("ChessAPI.Models.ChessGame", b =>
                {
                    b.HasOne("ChessAPI.Models.User", "Black")
                        .WithMany()
                        .HasForeignKey("BlackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChessAPI.Models.User", "White")
                        .WithMany()
                        .HasForeignKey("WhiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Black");

                    b.Navigation("White");
                });
#pragma warning restore 612, 618
        }
    }
}
